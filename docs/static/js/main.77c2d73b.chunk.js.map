{"version":3,"sources":["components/login/LoginScreen.jsx","data/heroes.js","components/heroes/HeroCard.jsx","components/heroes/HeroList.jsx","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.jsx","components/ui/Navbar.jsx","components/heroes/HeroScreen.jsx","selectors/getHeroesById.js","components/dc/DcScreen.jsx","components/search/SearchScreen.jsx","selectors/getHeroesByName.js","hooks/useForm.js","routers/DashboardRoutes.jsx","routers/AppRouter.jsx","HeroesApp.jsx","index.js"],"names":["LoginScreen","history","className","onClick","replace","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroCard","style","maxWidth","src","alt","to","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","Navbar","activeClassName","exact","HeroScreen","heroeId","useParams","find","length","push","goBack","DcScreen","SearchScreen","name","location","useLocation","queryString","parse","search","q","heroesFiltred","toLocaleLowerCase","initialState","useState","values","setValues","target","value","useForm","searchText","setSearchValue","onSubmit","e","console","log","preventDefault","type","placeholder","onChange","DashboardRoutes","path","component","AppRouter","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77c2d73b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n  const handleLogin = () => {\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Login</h1>\r\n      <hr />\r\n\r\n      <button className=\"btn btn-primary\" onClick={handleLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const heroes = [\r\n  {\r\n    id: \"dc-batman\",\r\n    superhero: \"Batman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Bruce Wayne\",\r\n    first_appearance: \"Detective Comics #27\",\r\n    characters: \"Bruce Wayne\",\r\n  },\r\n  {\r\n    id: \"dc-superman\",\r\n    superhero: \"Superman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Kal-El\",\r\n    first_appearance: \"Action Comics #1\",\r\n    characters: \"Kal-El\",\r\n  },\r\n  {\r\n    id: \"dc-flash\",\r\n    superhero: \"Flash\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Jay Garrick\",\r\n    first_appearance: \"Flash Comics #1\",\r\n    characters: \"Jay Garrick, Barry Allen, Wally West, Bart Allen\",\r\n  },\r\n  {\r\n    id: \"dc-green\",\r\n    superhero: \"Green Lantern\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Alan Scott\",\r\n    first_appearance: \"All-American Comics #16\",\r\n    characters:\r\n      \"Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz\",\r\n  },\r\n  {\r\n    id: \"dc-arrow\",\r\n    superhero: \"Green Arrow\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Oliver Queen\",\r\n    first_appearance: \"More Fun Comics #73\",\r\n    characters: \"Oliver Queen\",\r\n  },\r\n  {\r\n    id: \"dc-wonder\",\r\n    superhero: \"Wonder Woman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Princess Diana\",\r\n    first_appearance: \"All Star Comics #8\",\r\n    characters: \"Princess Diana\",\r\n  },\r\n  {\r\n    id: \"dc-martian\",\r\n    superhero: \"Martian Manhunter\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"J'onn J'onzz\",\r\n    first_appearance: \"Detective Comics #225\",\r\n    characters: \"Martian Manhunter\",\r\n  },\r\n  {\r\n    id: \"dc-robin\",\r\n    superhero: \"Robin/Nightwing\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dick Grayson\",\r\n    first_appearance: \"Detective Comics #38\",\r\n    characters: \"Dick Grayson\",\r\n  },\r\n  {\r\n    id: \"dc-blue\",\r\n    superhero: \"Blue Beetle\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dan Garret\",\r\n    first_appearance: \"Mystery Men Comics #1\",\r\n    characters: \"Dan Garret, Ted Kord, Jaime Reyes\",\r\n  },\r\n  {\r\n    id: \"dc-black\",\r\n    superhero: \"Black Canary\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dinah Drake\",\r\n    first_appearance: \"Flash Comics #86\",\r\n    characters: \"Dinah Drake, Dinah Lance\",\r\n  },\r\n  {\r\n    id: \"marvel-spider\",\r\n    superhero: \"Spider Man\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Peter Parker\",\r\n    first_appearance: \"Amazing Fantasy #15\",\r\n    characters: \"Peter Parker\",\r\n  },\r\n  {\r\n    id: \"marvel-captain\",\r\n    superhero: \"Captain America\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Steve Rogers\",\r\n    first_appearance: \"Captain America Comics #1\",\r\n    characters: \"Steve Rogers\",\r\n  },\r\n  {\r\n    id: \"marvel-iron\",\r\n    superhero: \"Iron Man\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Tony Stark\",\r\n    first_appearance: \"Tales of Suspense #39\",\r\n    characters: \"Tony Stark\",\r\n  },\r\n  {\r\n    id: \"marvel-thor\",\r\n    superhero: \"Thor\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Thor Odinson\",\r\n    first_appearance: \"Journey into Myster #83\",\r\n    characters: \"Thor Odinson\",\r\n  },\r\n  {\r\n    id: \"marvel-hulk\",\r\n    superhero: \"Hulk\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Bruce Banner\",\r\n    first_appearance: \"The Incredible Hulk #1\",\r\n    characters: \"Bruce Banner\",\r\n  },\r\n  {\r\n    id: \"marvel-wolverine\",\r\n    superhero: \"Wolverine\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"James Howlett\",\r\n    first_appearance: \"The Incredible Hulk #180\",\r\n    characters: \"James Howlett\",\r\n  },\r\n  {\r\n    id: \"marvel-daredevil\",\r\n    superhero: \"Daredevil\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Matthew Michael Murdock\",\r\n    first_appearance: \"Daredevil #1\",\r\n    characters: \"Matthew Michael Murdock\",\r\n  },\r\n  {\r\n    id: \"marvel-hawkeye\",\r\n    superhero: \"Hawkeye\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Clinton Francis Barton\",\r\n    first_appearance: \"Tales of Suspense #57\",\r\n    characters: \"Clinton Francis Barton\",\r\n  },\r\n  {\r\n    id: \"marvel-cyclops\",\r\n    superhero: \"Cyclops\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Scott Summers\",\r\n    first_appearance: \"X-Men #1\",\r\n    characters: \"Scott Summers\",\r\n  },\r\n  {\r\n    id: \"marvel-silver\",\r\n    superhero: \"Silver Surfer\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Norrin Radd\",\r\n    first_appearance: \"The Fantastic Four #48\",\r\n    characters: \"Norrin Radd\",\r\n  },\r\n];\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroCard = ({ \r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n    const urlImages = 'https://majiar15.github.io/react-heroes-app/assets/heroes';\r\n    return (\r\n        <div className=\"card ms-3\" style={ {maxWidth: 540} }>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`${urlImages}/${id}.jpg`} alt={id}  className=\"card-img\"/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\"> {superhero}</h5>\r\n                        <p className=\"card-text\"> {alter_ego} </p>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                                && <p className=\"card-text\"> {characters} </p>\r\n                        }\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\" > {first_appearance}</small>\r\n                        </p>\r\n                        <Link to={`./hero/${id}`}>\r\n                            mas...\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { getHeroesByPublisher } from \"../../selectors/getHeroesByPublisher\";\r\nimport { HeroCard } from \"./HeroCard\";\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n  // const heroes = getHeroesByPublisher(publisher);\r\n  const heroes = useMemo(() => getHeroesByPublisher(publisher) , [publisher])\r\n  return (\r\n    <div className=\"card-columns  animate__animated animate__fadeIn \">\r\n      {heroes.map((hero) => {\r\n        return <HeroCard key={hero.id} {...hero}/>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n  const validPublishers = [\"DC Comics\", \"Marvel Comics\"];\r\n\r\n  if (!validPublishers.includes(publisher)) {\r\n    throw new Error(`publisher \"${publisher}\" no es correcto`);\r\n  }\r\n\r\n  return heroes.filter((hero) => hero.publisher === publisher);\r\n};\r\n","import React from \"react\";\r\nimport { HeroList } from \"../heroes/HeroList\";\r\n\r\nexport const MarvelScreen = () => {\r\n  return (\r\n    <>\r\n      <h1>Marvel</h1>\r\n      <hr />\r\n      <HeroList publisher=\"Marvel Comics\" />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 justify-content-end\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/login\"\r\n                    >\r\n                        Logout\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroesById } from '../../selectors/getHeroesById';\r\n\r\n\r\nexport const HeroScreen = ({history}) => {\r\n    // const params = useParams();\r\n    const {heroeId} = useParams();\r\n    // const hero = getHeroesById(heroeId);\r\n    const hero = useMemo(() => getHeroesById(heroeId) , [heroeId]);\r\n    const handleReturn = ()=>{\r\n        if(history.length <= 2){\r\n            history.push('/');\r\n        }else{\r\n        history.goBack();\r\n        }\r\n    }\r\n    if (!hero){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n        <div className=\" row mt-5 \">\r\n            <div className=\"col-4\">\r\n                <img src={`../assets/heroes/${hero.id}.jpg`}\r\n                     alt={hero.id} \r\n                     className=\"img-thumbnail animate__animated animate__fadeInLeft\"/>\r\n            </div>\r\n            <div className=\"col-8\">\r\n                <h3>{hero.superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"> <b>Alter ego: </b> {hero.alter_ego}</li>\r\n                    <li className=\"list-group-item\"> <b>publisher </b> {hero.publisher}</li>\r\n                    <li className=\"list-group-item\"> <b>frist apparence: </b> {hero.first_appearance}</li>\r\n\r\n                </ul>\r\n                <h5> Characters </h5>\r\n                <p>{ hero.characters }</p>\r\n                <button \r\n                    className=\"btn btn-outline-primary\"\r\n                    onClick={ handleReturn }\r\n                >\r\n                    returm\r\n                </button>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesById = (id) =>{\r\n  \r\n    return heroes.find( hero => hero.id === id);\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <>\r\n          <h1>DC</h1>  \r\n          <hr/>\r\n          <HeroList publisher=\"DC Comics\" />   \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport  queryString  from \"query-string\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({history}) => {\r\n\r\n    let location = useLocation();\r\n    const { q = '' } =queryString.parse(location.search)\r\n    const heroesFiltred = getHeroesByName(q);\r\n    \r\n    const [{searchText}, setSearchValue] = useForm({searchText: q});\r\n    const handleInputSubmit = (e)=>{\r\n        console.log(searchText);\r\n       \r\n        history.push(`?q=${searchText}`)\r\n        e.preventDefault();\r\n     \r\n    }\r\n    return (\r\n        <>\r\n            <h1>Search</h1>   \r\n            <hr/>\r\n            <div className=\" row \">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr/>\r\n                    <form onSubmit={ handleInputSubmit }>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"searchText\"\r\n                            placeholder=\"Find yout hero\"\r\n                            className=\"form-control\"\r\n                            onChange={setSearchValue}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                            \r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    {\r\n                        (q === '')\r\n                            &&\r\n                            <div className=\" alert alert-info\">\r\n                                search a hero\r\n                            </div>\r\n                    }\r\n                     {\r\n                        (q !== '' && heroesFiltred.length === 0)\r\n                            &&\r\n                            <div className=\" alert alert-danger\">\r\n                                There is no a hero with { q }\r\n                            </div>\r\n                    }\r\n                    \r\n                    {\r\n\r\n                \r\n\r\n                        heroesFiltred.map( hero =>{\r\n                           return <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = (name) =>{\r\n    if(name === ''){\r\n        return [];\r\n    }\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n}","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n    const reset =  () =>{\r\n        setValues( initialState );\r\n    }\r\n    const handleInputChange = ( {target} ) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { MarvelScreen } from \"../components/marvel/MarvelScreen\";\r\nimport { Navbar } from \"../components/ui/Navbar\";\r\nimport { HeroScreen } from \"../components/heroes/HeroScreen\";\r\nimport { DcScreen } from \"../components/dc/DcScreen\";\r\nimport { SearchScreen } from \"../components/search/SearchScreen\";\r\nexport const DashboardRoutes = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n          <Route exact path=\"/dc\" component={DcScreen} />\r\n          <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\r\n          <Route  path=\"/search\" component={SearchScreen} />\r\n\r\n          <Redirect to=\"/marvel\" />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\n\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/\" component={DashboardRoutes} />\r\n        </Switch>\r\n\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const HeroesApp = () => {\r\n    return (\r\n        \r\n        <AppRouter />\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HeroesApp } from './HeroesApp';\r\n\r\n\r\nReactDOM.render(\r\n    <HeroesApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}